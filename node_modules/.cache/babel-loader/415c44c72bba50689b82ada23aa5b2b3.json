{"ast":null,"code":"import _createClass from \"/home/wilder/Documents/Projet/googlemap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wilder/Documents/Projet/googlemap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wilder/Documents/Projet/googlemap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wilder/Documents/Projet/googlemap/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/wilder/Documents/Projet/googlemap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/wilder/Documents/Projet/googlemap/src/Mapcontainer.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Polyline, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport \"./App.css\";\nimport Geox from './Geox';\nimport MarkerConfig from \"./MarkerConfig\";\nimport Export from './Export';\nimport Import from './Import';\nimport Image1 from './image1.png';\nimport Image2 from './image2.png';\nimport Image3 from './Image3.png';\nimport Image4 from './Icone4.png';\nimport Itineraire from './itinéraire';\nexport var Markeur = function Markeur(nom, lat, lng) {\n  _classCallCheck(this, Markeur);\n\n  this.nom = nom;\n  this.lat = lat;\n  this.lng = lng;\n  this.titre = \"\";\n  this.texte = \"\";\n  this.img = \"\";\n  this.icon = Image2;\n  this.important = 0;\n};\nvar style = {\n  width: '75%',\n  height: '75%'\n};\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer(_props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, _props));\n\n    _this.update = function () {\n      _this.setState({\n        nbmk: 10\n      });\n    };\n\n    _this.newDragend = function (markeur, p2, event) {\n      var newlat = event.latLng.lat();\n      var newlng = event.latLng.lng();\n      var id = markeur.id;\n      _this.geox.mk[id].lng = newlng;\n      _this.geox.mk[id].lat = newlat;\n\n      _this.setState({\n        nmbk: _this.geox.mk.length,\n        showingInfoWindow: false\n      });\n    };\n\n    _this.affichage = function (markeur, p2, event) {\n      _this.setState({\n        on: !_this.state.on\n      });\n    };\n\n    _this.ElementDiv = function (titre, text, img, number) {\n      if (_this.geox.mk.length > 0 && _this.state.selectedPlace !== 0) {\n        _this.geox.mk[_this.state.selectedPlace.id].titre = titre;\n        _this.geox.mk[_this.state.selectedPlace.id].texte = text;\n        _this.geox.mk[_this.state.selectedPlace.id].icon = Image1;\n        _this.geox.mk[_this.state.selectedPlace.id].important = 1;\n        _this.geox.mk[_this.state.selectedPlace.id].img = img;\n\n        _this.setState({\n          nmbk: _this.geox.mk.length\n        });\n      }\n    };\n\n    _this.Modevtt = function () {\n      if (_this.state.Vtt === false) {\n        for (var i = 0; i < _this.geox.mk.length; i++) {\n          if (!(i === 0 || i === _this.geox.mk.length - 1 || _this.geox.mk[i].important === 1)) {\n            _this.geox.mk[i].icon = Image4;\n          }\n        }\n\n        _this.setState({\n          Vtt: true\n        });\n\n        console.log(_this.state.Modevtt);\n      }\n\n      if (_this.state.Vtt === true) {\n        for (var _i = 0; _i < _this.geox.mk.length; _i++) {\n          if (_this.geox.mk[_i].important === 1) {\n            _this.geox.mk[_i].icon = Image1;\n            /** << Permet quand on appuis sur un markeur de donner l'image de base  */\n          } else {\n            _this.geox.mk[_i].icon = Image2;\n          }\n        }\n\n        _this.setState({\n          Vtt: false\n        });\n      }\n    };\n\n    _this.onMarkerClick = function (props, marker, event) {\n      for (var i = 0; i < _this.geox.mk.length; i++) {\n        if (_this.geox.mk[i].important === 1) {\n          _this.geox.mk[i].icon = Image1;\n        }\n        /** << Permet quand on appuis sur un markeur de donner l'image de base  */\n\n\n        if (_this.geox.mk[i].icon !== Image4 && _this.geox.mk[i].important !== 1) {\n          _this.geox.mk[i].icon = Image2;\n        }\n      }\n\n      console.log(props);\n\n      _this.setState({\n        nmbk: _this.geox.mk.length\n      });\n\n      if (_this.geox.mk[props.id].important === 0) {\n        _this.geox.mk[props.id].icon = Image3;\n      }\n\n      _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        Event: event,\n        origin: props\n      });\n      /** faire condition avec texte != \"\" et les autres !!!<< */\n\n\n      if (_this.geox.mk[props.id].important === 1 && _this.geox.mk[props.id].texte !== \"\") {\n        _this.setState({\n          showingInfoWindow: true\n        });\n      } else {\n        _this.setState({\n          showingInfoWindow: false\n        });\n      }\n\n      console.log(_this.geox.mk[_this.state.activeMarker.id]);\n    };\n\n    _this.FunctionTestAfficher = function () {\n      if (_this.geox.mk.length > 1) {\n        console.log(_this.geox.mk[0].lat);\n        return _this.geox.mk[1].lat;\n      }\n    };\n\n    _this.SupprimerMarkeurActuel = function () {\n      console.log(_this.geox.mk[_this.state.selectedPlace.id]);\n\n      _this.geox.mk.splice(_this.state.selectedPlace.id, 1);\n\n      _this.setState({\n        nbmk: _this.geox.mk.length,\n        showingInfoWindow: false,\n        selectedPlace: 0\n      });\n    };\n\n    _this.tracerItineraire = function (points) {\n      var poits = points; // reùmplir tableau\n\n      points.push(new Markeur());\n      return points;\n\n      _this.setState({\n        points: points.map(function (el, index) {\n          var lat = el[0];\n          var lng = el[1];\n\n          _this.geox.mk.push(new Markeur(\"point \" + _this.geox.mk.length, lat, lng));\n\n          return {\n            lat: lat,\n            lng: lng\n          };\n        })\n      });\n\n      _this.geox.mk.slice(1, 2);\n    };\n\n    _this.geox = new Geox();\n    _this.state = {\n      origin: null,\n      destination: null,\n      points: [],\n      nbmk: 1,\n      isOpen: false,\n      Poly: false,\n      on: _props.on,\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: null,\n      Vtt: false\n    };\n    _this.button = _this.state.on ? \"none\" : \"block\";\n    return _this;\n  }\n  /** Fonction serveur import - export **/\n\n\n  _createClass(MapContainer, [{\n    key: \"change\",\n    value: function change() {\n      if (this.state.Poly === false) {\n        this.setState({\n          Poly: true\n        });\n      } else {\n        this.setState({\n          Poly: false\n        });\n      }\n    }\n  }, {\n    key: \"delete\",\n\n    /** permet de supprimer un markeur depuis le bouton **/\n    value: function _delete() {\n      this.geox.mk.pop();\n      this.setState({\n        nbmk: this.geox.mk.length\n      });\n      this.setState({\n        nbmk: this.geox.mk.length,\n        showingInfoWindow: false,\n        selectedPlace: 0\n      });\n    }\n    /** permet de supprimer tous les markeurs depuis le bouton **/\n\n  }, {\n    key: \"deleteAll\",\n    value: function deleteAll() {\n      this.geox.mk.splice(0, this.geox.mk.length);\n      this.setState({\n        nbmk: this.geox.mk.length,\n        showingInfoWindow: false,\n        selectedPlace: 0\n      });\n    }\n    /** permet d'ajouter un markeur sur la map en appuyant sur click gauche**/\n\n  }, {\n    key: \"handleMapClick\",\n    value: function handleMapClick(p1, p2, event) {\n      this.setState({\n        Vtt: false\n      });\n      this.Modevtt();\n      var lat = event.latLng.lat();\n      var lng = event.latLng.lng();\n      this.geox.mk.push(new Markeur(\"point \" + this.geox.mk.length, lat, lng));\n      this.setState({\n        nbmk: this.geox.mk.length\n      });\n      console.log(this.geox.mk);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var icon = Image2;\n      var rows = [];\n      var poli = [];\n      var info = \"\";\n\n      for (var i = 0; i < this.geox.mk.length; i++) {\n        if (this.geox.mk[i].important === 0) {\n          icon = Image2;\n        } else {\n          icon = Image1;\n        }\n\n        rows.push(React.createElement(Marker, {\n          id: i,\n          name: this.geox.mk[i].nom,\n          onClick: this.onMarkerClick,\n          draggable: true,\n          onDragend: this.newDragend,\n          position: {\n            lat: this.geox.mk[i].lat,\n            lng: this.geox.mk[i].lng\n          },\n          icon: this.geox.mk[i].icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }));\n\n        if (i > 0) {\n          poli.push(rows[i].props.position);\n        }\n      }\n\n      if (this.geox.mk.length > 0 && this.state.selectedPlace !== 0) {\n        info = React.createElement(\"div\", {\n          className: \"MarkeurInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, this.geox.mk[this.state.selectedPlace.id].titre), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, this.geox.mk[this.state.selectedPlace.id].texte), React.createElement(\"img\", {\n          className: \"imgdiv\",\n          src: this.geox.mk[this.state.selectedPlace.id].img,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }));\n      }\n\n      var polySelector = this.state.Poly ? poli : null;\n      return React.createElement(\"div\", {\n        className: \"MAPP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"boutonMarker\",\n        onClick: this.Modevtt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Mode VTT \", this.state.Vtt ? \" Désactiver\" : \" Activer\"), React.createElement(\"div\", {\n        className: \"mapSize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Itineraire, {\n        tracerItin: this.tracerItineraire,\n        point: this.state.selectedPlace,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(Map, {\n        style: style,\n        google: this.props.google,\n        zoom: 18,\n        initialCenter: {\n          lat: 43.599980,\n          lng: 1.443138\n        },\n        streetViewControl: false,\n        mapTypeControl: false,\n        onClick: this.handleMapClick.bind(this),\n        disableDoubleClickZoom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, rows, React.createElement(Polyline, {\n        path: polySelector,\n        strokeWeight: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, info))), React.createElement(\"div\", {\n        className: \"sectiondroit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"ulmap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"boutonMarker\",\n        onClick: this.deleteAll.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Supprimer tous les markeurs\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"boutonMarker\",\n        onClick: this.delete.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Supprimer le dernier markeur\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"boutonMarker\",\n        onClick: this.change.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, this.state.Poly ? \" Désactiver\" : \" Activer\", \" le tracer\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(MarkerConfig, {\n        laat: this.state.selectedPlace.id,\n        delete: this.SupprimerMarkeurActuel,\n        add: this.ElementDiv,\n        Markeur: this.geox.mk[this.state.selectedPlace.id],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"sectionbas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(Export, {\n        jsonSave: this.geox.mk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(Import, {\n        jsonLoad: this.geox.mk,\n        callback: this.update,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA3Gsj08QzmXalEyHuuHgnzNKk4dGS6i84\"\n})(MapContainer);","map":{"version":3,"sources":["/home/wilder/Documents/Projet/googlemap/src/Mapcontainer.js"],"names":["React","Component","Map","InfoWindow","Polyline","Marker","GoogleApiWrapper","Geox","MarkerConfig","Export","Import","Image1","Image2","Image3","Image4","Itineraire","Markeur","nom","lat","lng","titre","texte","img","icon","important","style","width","height","MapContainer","props","update","setState","nbmk","newDragend","markeur","p2","event","newlat","latLng","newlng","id","geox","mk","nmbk","length","showingInfoWindow","affichage","on","state","ElementDiv","text","number","selectedPlace","Modevtt","Vtt","i","console","log","onMarkerClick","marker","activeMarker","Event","origin","FunctionTestAfficher","SupprimerMarkeurActuel","splice","tracerItineraire","points","poits","push","map","el","index","slice","destination","isOpen","Poly","button","pop","p1","rows","poli","info","position","polySelector","google","handleMapClick","bind","deleteAll","delete","change","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Map, InfoWindow, Polyline, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport \"./App.css\";\nimport Geox from './Geox';\nimport MarkerConfig from \"./MarkerConfig\";\nimport Export from './Export';\nimport Import from './Import';\nimport Image1 from './image1.png';\nimport Image2 from './image2.png'\nimport Image3 from './Image3.png'\nimport Image4 from './Icone4.png'\nimport Itineraire from './itinéraire';\n\n\nexport class Markeur {\n\n    constructor(nom,lat,lng){\n\n        this.nom=nom;  \n        this.lat=lat;\n        this.lng=lng;\n        this.titre=\"\";\n        this.texte=\"\";\n        this.img=\"\";\n        this.icon=Image2;\n        this.important=0;\n    }\n}\n\n\nconst style = {\n    width: '75%',\n    height: '75%',\n};\n\n\nexport class MapContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.geox = new Geox();\n\n        this.state = {\n            origin: null,\n            destination: null,\n            points: [],\n            nbmk: 1,\n            isOpen: false,\n            Poly: false,\n            on: props.on,\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: null,\n            Vtt:false\n        };\n        this.button = this.state.on ? \"none\" : \"block\";\n        \n\n\n    }\n\n\n/** Fonction serveur import - export **/\n\nupdate = () => {\n    \n    \n    this.setState({nbmk:10})};\n\n\n/** Fonction qui permet de d'actualiser la polyline du markeur */\n    newDragend = (markeur,p2,event) =>{\n        var newlat = event.latLng.lat();\n        var newlng = event.latLng.lng();\n        var id= markeur.id;\n\n        this.geox.mk[id].lng=newlng;\n        this.geox.mk[id].lat=newlat;\n        this.setState({nmbk:this.geox.mk.length,showingInfoWindow:false});\n    };\n\n    affichage = (markeur,p2,event) => {\n    this.setState({on:!this.state.on})\n    };\n\n\n    ElementDiv = (titre,text,img,number) => {\n        if((this.geox.mk.length > 0)&&(this.state.selectedPlace !== 0)){\n\n        this.geox.mk[this.state.selectedPlace.id].titre = titre;\n        this.geox.mk[this.state.selectedPlace.id].texte = text;\n        this.geox.mk[this.state.selectedPlace.id].icon = Image1\n        this.geox.mk[this.state.selectedPlace.id].important = 1;\n        this.geox.mk[this.state.selectedPlace.id].img = img\n        this.setState({nmbk:this.geox.mk.length});\n        }\n    \n    }\n\n  \n\n\n    change () {\n      \n        if(this.state.Poly === false){\n            this.setState({Poly:true})\n        }else{\n            this.setState({Poly:false})\n        } \n    }\n\n    Modevtt = () => {\n        if(this.state.Vtt === false){\n            for(var i=0;i<this.geox.mk.length;i++){\n                if (!((i=== 0)||(i=== this.geox.mk.length - 1)||(this.geox.mk[i].important === 1))){\n                        this.geox.mk[i].icon = Image4\n                }\n            }\n            this.setState({Vtt: true});\n            console.log(this.state.Modevtt)\n        }if(this.state.Vtt === true){\n            for(let i=0;i<this.geox.mk.length;i++){       \n                if(this.geox.mk[i].important === 1){\n                    this.geox.mk[i].icon = Image1            /** << Permet quand on appuis sur un markeur de donner l'image de base  */\n                }else{\n                    this.geox.mk[i].icon = Image2}       \n            \n        } this.setState({Vtt: false});\n        \n        }\n\n    }\n\n    \n\n    /** permet de supprimer un markeur depuis le bouton **/\n    delete () {\n        this.geox.mk.pop();\n        this.setState({nbmk:this.geox.mk.length})\n        this.setState({nbmk: this.geox.mk.length, showingInfoWindow: false,selectedPlace: 0})\n    }\n/** permet de supprimer tous les markeurs depuis le bouton **/\n    deleteAll () {\n\n        this.geox.mk.splice(0, this.geox.mk.length);\n        this.setState({nbmk: this.geox.mk.length, showingInfoWindow: false, selectedPlace: 0})\n    }\n\n/** permet d'ajouter un markeur sur la map en appuyant sur click gauche**/\n    handleMapClick(p1,p2,event) {\n        this.setState({Vtt: false})\n        this.Modevtt()\n\n        var lat = event.latLng.lat();\n        var lng = event.latLng.lng();\n        this.geox.mk.push(new Markeur(\"point \"+ this.geox.mk.length,lat,lng));\n        this.setState({nbmk:this.geox.mk.length});\n        console.log(this.geox.mk);\n    }\n    onMarkerClick = (props, marker, event) =>{\n        for(let i=0;i<this.geox.mk.length;i++){       \n            if(this.geox.mk[i].important === 1){\n                this.geox.mk[i].icon = Image1    }        /** << Permet quand on appuis sur un markeur de donner l'image de base  */\n            if((this.geox.mk[i].icon !== Image4)&&(this.geox.mk[i].important !== 1)){\n                this.geox.mk[i].icon = Image2\n            }\n            \n        }\n        console.log(props)\n        this.setState({nmbk:this.geox.mk.length});\n        if( this.geox.mk[props.id].important === 0){\n            this.geox.mk[props.id].icon = Image3\n        }\n\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            Event: event,\n            \n            origin : props,\n            \n            });\n            /** faire condition avec texte != \"\" et les autres !!!<< */\n        if((this.geox.mk[props.id].important === 1)&&(this.geox.mk[props.id].texte !== \"\")){\n            this.setState({showingInfoWindow:true})\n        } else {\n            this.setState({showingInfoWindow:false})\n        }\n\n        console.log(this.geox.mk[this.state.activeMarker.id])\n};\n    FunctionTestAfficher = () => {\n        if (this.geox.mk.length > 1){\n            console.log(this.geox.mk[0].lat);\n            return this.geox.mk[1].lat\n        }\n    };\n\n    SupprimerMarkeurActuel = () => {\n\n        console.log(this.geox.mk[this.state.selectedPlace.id]);\n        this.geox.mk.splice(this.state.selectedPlace.id,1);\n    \n        this.setState({nbmk: this.geox.mk.length, showingInfoWindow: false, selectedPlace: 0})\n    };\n\n    tracerItineraire = (points) => {\n        let poits = points;\n        // reùmplir tableau\n        points.push (new Markeur());\n        return points;\n        this.setState({\n            points : points.map((el, index) => {\n                const lat = el[0]\n                const lng = el[1]\n\n                this.geox.mk.push(new Markeur(\"point \"+ this.geox.mk.length,lat,lng))\n\n                return { lat: lat , lng : lng,}\n            })\n        })\n        this.geox.mk.slice(1,2) \n    }\n\n    render() {\n\n        let icon=Image2\n        let rows = [];\n        let poli = [];\n        let info=\"\";\n\n        for (var i = 0; i< this.geox.mk.length;i++){\n            if (this.geox.mk[i].important === 0){\n                icon = Image2;\n            } else {\n                icon = Image1;\n            }\n            rows.push(\n                <Marker\n                id={i} name={this.geox.mk[i].nom}\n                onClick={this.onMarkerClick}\n                draggable={true} onDragend={this.newDragend}\n                position={{lat: this.geox.mk[i].lat,lng: this.geox.mk[i].lng}}\n                icon= {this.geox.mk[i].icon}\n                />);\n            if(i>0){\n            poli.push(rows[i].props.position)}\n      }\n     \n\n      if((this.geox.mk.length > 0)&&(this.state.selectedPlace !== 0)){\n          \n          info= <div className=\"MarkeurInfo\">\n          <h2>{this.geox.mk[this.state.selectedPlace.id].titre}</h2>\n          <p>{this.geox.mk[this.state.selectedPlace.id].texte}</p>\n          <img className=\"imgdiv\" src={this.geox.mk[this.state.selectedPlace.id].img} alt=\"\"/>\n      </div>\n      }\n       \n        const polySelector = this.state.Poly ? poli : null;\n\n\n\n\n        return (\n            <div className=\"MAPP\">\n                <button  className=\"boutonMarker\" onClick={this.Modevtt}>Mode VTT {this.state.Vtt ? \" Désactiver\": \" Activer\"}</button>\n                <div className=\"mapSize\">\n                <Itineraire \n                    tracerItin ={this.tracerItineraire}\n                    point={this.state.selectedPlace}\n                />\n                <Map\n                    style={style}\n                    google={this.props.google}\n                    zoom={18}\n                    initialCenter={{lat:43.599980, lng:1.443138}}\n                    streetViewControl={false}\n                    mapTypeControl={false}\n                    onClick={this.handleMapClick.bind(this)}\n\n                    disableDoubleClickZoom={true}\n                >\n                    {rows}\n                    <Polyline\n                    path={polySelector}\n                    strokeWeight={2}\n                    />\n\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}\n                        >\n                        {info}\n                    </InfoWindow>\n\n                    </Map>\n                    </div>\n                    <div className=\"sectiondroit\">\n                    <ul className=\"ulmap\">\n                        <li><button  className=\"boutonMarker\" onClick={this.deleteAll.bind(this)}>Supprimer tous les markeurs</button></li>\n                        <br/>\n                        <li><button  className=\"boutonMarker\" onClick={this.delete.bind(this)}>Supprimer le dernier markeur</button></li>\n                        <br/>\n                        <li><button   className=\"boutonMarker\" onClick={this.change.bind(this)}>{this.state.Poly ? \" Désactiver\": \" Activer\"} le tracer</button></li>\n                    </ul>\n                    <div>\n                    <MarkerConfig\n                        laat={this.state.selectedPlace.id}\n                        delete={this.SupprimerMarkeurActuel}\n                        add={this.ElementDiv}\n                        Markeur={this.geox.mk[this.state.selectedPlace.id]}\n                    />\n                    </div>\n                    </div>\n                    <div className=\"sectionbas\">\n                        <Export jsonSave={this.geox.mk}/>\n                        <Import jsonLoad={this.geox.mk} callback={this.update}/>\n                    </div>\n\n\n            </div>\n\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyA3Gsj08QzmXalEyHuuHgnzNKk4dGS6i84\"\n\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}