{"ast":null,"code":"import _createClass from \"/home/karyl/Documents/Googlemap/googlemap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/karyl/Documents/Googlemap/googlemap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/karyl/Documents/Googlemap/googlemap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/karyl/Documents/Googlemap/googlemap/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/karyl/Documents/Googlemap/googlemap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/karyl/Documents/Googlemap/googlemap/src/Mapcontainer.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Polyline, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport \"./App.css\";\nimport Geox from './Geox';\nimport MarkerConfig from \"./MarkerConfig\";\nimport Export from './Export';\nimport Import from './Import';\nimport Image1 from './image1.png';\nimport Image2 from './image2.png';\nexport var Markeur = function Markeur(nom, lat, lng) {\n  _classCallCheck(this, Markeur);\n\n  this.nom = nom;\n  this.lat = lat;\n  this.lng = lng;\n  this.titre = \"\";\n  this.texte = \"\";\n  this.img = \"\";\n  this.important = 0;\n}; // const style = {\n//     width: '75%',\n//     height: '75%'\n// };\n\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer(_props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, _props));\n\n    _this.update = function () {\n      _this.setState({\n        nbmk: 10\n      });\n    };\n\n    _this.newDragend = function (markeur, p2, event) {\n      var newlat = event.latLng.lat();\n      var newlng = event.latLng.lng();\n      var id = markeur.id;\n      _this.geox.mk[id].lng = newlng;\n      _this.geox.mk[id].lat = newlat;\n\n      _this.setState({\n        nmbk: _this.geox.mk.length,\n        showingInfoWindow: false\n      });\n    };\n\n    _this.affichage = function (markeur, p2, event) {\n      _this.setState({\n        on: !_this.state.on\n      });\n    };\n\n    _this.import = function () {};\n\n    _this.ElementDiv = function (titre, text, img, number) {\n      if (_this.geox.mk.length > 0) {\n        _this.geox.mk[_this.state.selectedPlace.id].titre = titre;\n        _this.geox.mk[_this.state.selectedPlace.id].texte = text;\n        _this.geox.mk[_this.state.selectedPlace.id].important = 1;\n        _this.geox.mk[_this.state.selectedPlace.id].img = img;\n\n        _this.setState({\n          nmbk: _this.geox.mk.length\n        });\n      }\n    };\n\n    _this.onMarkerClick = function (props, marker, event) {\n      _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        Event: event\n      });\n      /** faire condition avec texte != \"\" et les autres !!!<< */\n\n\n      if (_this.geox.mk[props.id].important === 1 && _this.geox.mk[props.id].texte !== \"\") {\n        _this.setState({\n          showingInfoWindow: true\n        });\n      } else {\n        _this.setState({\n          showingInfoWindow: false\n        });\n      }\n    };\n\n    _this.FunctionTestAfficher = function () {\n      if (_this.geox.mk.length > 1) {\n        console.log(_this.geox.mk[0].lat);\n        return _this.geox.mk[1].lat;\n      }\n    };\n\n    _this.SupprimerMarkeurActuel = function () {\n      console.log(_this.geox.mk[_this.state.selectedPlace.id]);\n\n      _this.geox.mk.splice(_this.state.selectedPlace.id, 1);\n\n      _this.setState({\n        nbmk: _this.geox.mk.length,\n        showingInfoWindow: false,\n        selectedPlace: 0\n      });\n    };\n\n    _this.geox = new Geox();\n    _this.state = {\n      nbmk: 1,\n      isOpen: false,\n      Poly: true,\n      on: _props.on,\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: 0\n    };\n    _this.button = _this.state.on ? \"none\" : \"block\";\n    return _this;\n  }\n  /** Fonction serveur import - export **/\n\n\n  _createClass(MapContainer, [{\n    key: \"change\",\n    value: function change() {\n      this.setState({\n        Poly: !this.state.Poly\n      });\n    }\n    /** permet de supprimer un markeur depuis le bouton **/\n\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      this.geox.mk.pop();\n      this.setState({\n        nbmk: this.geox.mk.length\n      });\n      this.setState({\n        nbmk: this.geox.mk.length,\n        showingInfoWindow: false,\n        selectedPlace: 0\n      });\n    }\n    /** permet de supprimer tous les markeurs depuis le bouton **/\n\n  }, {\n    key: \"deleteAll\",\n    value: function deleteAll() {\n      this.geox.mk.splice(0, this.geox.mk.length);\n      this.setState({\n        nbmk: this.geox.mk.length,\n        showingInfoWindow: false,\n        selectedPlace: 0\n      });\n    }\n    /** permet d'ajouter un markeur sur la map en appuyant sur click gauche**/\n\n  }, {\n    key: \"handleMapClick\",\n    value: function handleMapClick(p1, p2, event) {\n      var lat = event.latLng.lat();\n      var lng = event.latLng.lng();\n      this.geox.mk.push(new Markeur(\"point \" + this.geox.mk.length, lat, lng));\n      this.setState({\n        nbmk: this.geox.mk.length\n      });\n      console.log(this.geox.mk);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var icon = Image2;\n      var rows = [];\n      var poli = [];\n      var info = \"\";\n\n      for (var i = 0; i < this.geox.mk.length; i++) {\n        if (this.geox.mk[i].important === 0) {\n          icon = Image2;\n        } else {\n          icon = Image1;\n        }\n\n        rows.push(React.createElement(Marker, {\n          id: i,\n          name: this.geox.mk[i].nom,\n          onClick: this.onMarkerClick,\n          draggable: true,\n          onDragend: this.newDragend,\n          position: {\n            lat: this.geox.mk[i].lat,\n            lng: this.geox.mk[i].lng\n          },\n          icon: icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }));\n        poli.push(rows[i].props.position);\n      }\n\n      if (this.geox.mk.length > 0 && this.state.selectedPlace !== 0) {\n        info = React.createElement(\"div\", {\n          className: \"MarkeurInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, this.geox.mk[this.state.selectedPlace.id].titre), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, this.geox.mk[this.state.selectedPlace.id].texte), React.createElement(\"img\", {\n          className: \"imgdiv\",\n          src: this.geox.mk[this.state.selectedPlace.id].img,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }));\n      }\n\n      var polySelector = this.state.Poly ? poli : null;\n      return React.createElement(\"div\", {\n        className: \"MAPP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Map // style={style}\n      , {\n        google: this.props.google,\n        zoom: 18,\n        initialCenter: {\n          lat: 43.599980,\n          lng: 1.443138\n        },\n        streetViewControl: false,\n        mapTypeControl: false,\n        onClick: this.handleMapClick.bind(this),\n        disableDoubleClickZoom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, rows, React.createElement(Polyline, {\n        path: polySelector,\n        strokeWeight: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, info)), React.createElement(\"div\", {\n        className: \"sectiondroit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"ulmap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.deleteAll.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Supprimer tous les markeurs\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.delete.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Supprimer dernier markeur\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.change.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Tracer:\", this.state.Poly ? \" Désactiver\" : \" Activer\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(MarkerConfig, {\n        laat: this.state.selectedPlace.id,\n        delete: this.SupprimerMarkeurActuel,\n        add: this.ElementDiv,\n        Markeur: this.geox.mk[this.state.selectedPlace.id],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"sectionbas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Export, {\n        jsonSave: this.geox.mk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(Import, {\n        jsonLoad: this.geox.mk,\n        callback: this.update,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA3Gsj08QzmXalEyHuuHgnzNKk4dGS6i84\"\n})(MapContainer);","map":{"version":3,"sources":["/home/karyl/Documents/Googlemap/googlemap/src/Mapcontainer.js"],"names":["React","Component","Map","InfoWindow","Polyline","Marker","GoogleApiWrapper","Geox","MarkerConfig","Export","Import","Image1","Image2","Markeur","nom","lat","lng","titre","texte","img","important","MapContainer","props","update","setState","nbmk","newDragend","markeur","p2","event","newlat","latLng","newlng","id","geox","mk","nmbk","length","showingInfoWindow","affichage","on","state","import","ElementDiv","text","number","selectedPlace","onMarkerClick","marker","activeMarker","Event","FunctionTestAfficher","console","log","SupprimerMarkeurActuel","splice","isOpen","Poly","button","pop","p1","push","icon","rows","poli","info","i","position","polySelector","google","handleMapClick","bind","deleteAll","delete","change","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Map, InfoWindow, Polyline, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport \"./App.css\";\nimport Geox from './Geox';\nimport MarkerConfig from \"./MarkerConfig\";\nimport Export from './Export';\nimport Import from './Import';\nimport Image1 from './image1.png';\nimport Image2 from './image2.png'\n\nexport class Markeur {\n\n    constructor(nom,lat,lng){\n\n        this.nom=nom;  \n        this.lat=lat;\n        this.lng=lng;\n        this.titre=\"\";\n        this.texte=\"\";\n        this.img=\"\";\n        this.important=0;\n    }\n}\n\n\n// const style = {\n//     width: '75%',\n//     height: '75%'\n// };\n\n\nexport class MapContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.geox = new Geox();\n\n        this.state = {\n            nbmk: 1,\n            isOpen: false,\n            Poly: true,\n            on: props.on,\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: 0,\n        };\n        this.button = this.state.on ? \"none\" : \"block\";\n\n\n    }\n\n\n/** Fonction serveur import - export **/\n\nupdate = () => {this.setState({nbmk:10})};\n\n/** Fonction qui permet de d'actualiser la polyline du markeur */\n    newDragend = (markeur,p2,event) =>{\n        var newlat = event.latLng.lat();\n        var newlng = event.latLng.lng();\n        var id= markeur.id;\n\n        this.geox.mk[id].lng=newlng;\n        this.geox.mk[id].lat=newlat;\n        this.setState({nmbk:this.geox.mk.length,showingInfoWindow:false});\n    };\n\n    affichage = (markeur,p2,event) => {\n    this.setState({on:!this.state.on})\n    };\n\n    import = () => {}\n\n    ElementDiv = (titre,text,img,number) => {\n        if(this.geox.mk.length > 0){\n\n        this.geox.mk[this.state.selectedPlace.id].titre = titre;\n        this.geox.mk[this.state.selectedPlace.id].texte = text;\n\n        this.geox.mk[this.state.selectedPlace.id].important = 1;\n        this.geox.mk[this.state.selectedPlace.id].img = img\n        this.setState({nmbk:this.geox.mk.length});\n        }\n    }\n\n\n\n    change () {\n        this.setState({Poly:!this.state.Poly})\n    }\n\n    /** permet de supprimer un markeur depuis le bouton **/\n    delete () {\n        this.geox.mk.pop();\n        this.setState({nbmk:this.geox.mk.length})\n        this.setState({nbmk: this.geox.mk.length, showingInfoWindow: false,selectedPlace: 0})\n    }\n/** permet de supprimer tous les markeurs depuis le bouton **/\n    deleteAll () {\n\n        this.geox.mk.splice(0, this.geox.mk.length);\n        this.setState({nbmk: this.geox.mk.length, showingInfoWindow: false, selectedPlace: 0})\n    }\n\n/** permet d'ajouter un markeur sur la map en appuyant sur click gauche**/\n    handleMapClick(p1,p2,event) {\n        var lat = event.latLng.lat();\n        var lng = event.latLng.lng();\n        this.geox.mk.push(new Markeur(\"point \"+ this.geox.mk.length,lat,lng));\n        this.setState({nbmk:this.geox.mk.length});\n        console.log(this.geox.mk);\n    }\n    onMarkerClick = (props, marker, event) =>{\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            Event: event,\n            });\n            /** faire condition avec texte != \"\" et les autres !!!<< */\n        if((this.geox.mk[props.id].important === 1)&&(this.geox.mk[props.id].texte !== \"\")){\n            this.setState({showingInfoWindow:true})\n        } else {\n            this.setState({showingInfoWindow:false})\n        }\n};\n    FunctionTestAfficher = () => {\n        if (this.geox.mk.length > 1){\n            console.log(this.geox.mk[0].lat);\n            return this.geox.mk[1].lat\n        }\n    };\n\n    SupprimerMarkeurActuel = () => {\n\n        console.log(this.geox.mk[this.state.selectedPlace.id]);\n        this.geox.mk.splice(this.state.selectedPlace.id,1);\n    \n        this.setState({nbmk: this.geox.mk.length, showingInfoWindow: false, selectedPlace: 0})\n    };\n\n\n\n    render() {\n\n        let icon=Image2\n        let rows = [];\n        let poli = [];\n        let info=\"\";\n\n        for (var i = 0; i< this.geox.mk.length;i++){\n            if (this.geox.mk[i].important === 0){\n                icon = Image2;\n            } else {\n                icon = Image1;\n            }\n            rows.push(\n                <Marker\n                id={i} name={this.geox.mk[i].nom}\n                onClick={this.onMarkerClick}\n                draggable={true} onDragend={this.newDragend}\n                position={{lat: this.geox.mk[i].lat,lng: this.geox.mk[i].lng}}\n                icon= {icon}\n                />);\n\n            poli.push(rows[i].props.position)\n      }\n      if((this.geox.mk.length > 0)&&(this.state.selectedPlace !== 0)){\n          \n          info= <div className=\"MarkeurInfo\">\n          <h2>{this.geox.mk[this.state.selectedPlace.id].titre}</h2>\n          <p>{this.geox.mk[this.state.selectedPlace.id].texte}</p>\n          <img className=\"imgdiv\" src={this.geox.mk[this.state.selectedPlace.id].img} alt=\"\"/>\n      </div>\n      }\n       \n        const polySelector = this.state.Poly ? poli : null;\n\n\n\n\n        return (\n            <div className=\"MAPP\">\n                <Map\n                    // style={style}\n                    google={this.props.google}\n                    zoom={18}\n                    initialCenter={{lat:43.599980, lng:1.443138}}\n                    streetViewControl={false}\n                    mapTypeControl={false}\n                    onClick={this.handleMapClick.bind(this)}\n\n                    disableDoubleClickZoom={true}\n                >\n                    {rows}\n                    <Polyline\n                    path={polySelector}\n                    strokeWeight={2}\n                    />\n\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}\n                        >\n                        {info}\n                    </InfoWindow>\n\n                </Map>\n\n                <div className=\"sectiondroit\">\n                    <ul className=\"ulmap\">\n                        <li><button onClick={this.deleteAll.bind(this)}>Supprimer tous les markeurs</button></li>\n                        <br/>\n                        <li><button onClick={this.delete.bind(this)}>Supprimer dernier markeur</button></li>\n                        <br/>\n                        <li><button onClick={this.change.bind(this)}>Tracer:{this.state.Poly ? \" Désactiver\": \" Activer\"}</button></li>\n                    </ul>\n                    <div>\n                    <MarkerConfig\n                        laat={this.state.selectedPlace.id}\n                        delete={this.SupprimerMarkeurActuel}\n                        add={this.ElementDiv}\n                        Markeur={this.geox.mk[this.state.selectedPlace.id]}\n                    />\n                    </div>\n                </div>\n                <div className=\"sectionbas\">\n                    <Export jsonSave={this.geox.mk}/>\n                    <Import jsonLoad={this.geox.mk} callback={this.update}/>\n                </div>\n\n\n            </div>\n\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyA3Gsj08QzmXalEyHuuHgnzNKk4dGS6i84\"\n\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}