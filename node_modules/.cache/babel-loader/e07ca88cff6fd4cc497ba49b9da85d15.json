{"ast":null,"code":"import _createClass from \"/home/karyl/Documents/Googlemap/googlemap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/karyl/Documents/Googlemap/googlemap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/karyl/Documents/Googlemap/googlemap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/karyl/Documents/Googlemap/googlemap/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/karyl/Documents/Googlemap/googlemap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/karyl/Documents/Googlemap/googlemap/src/Mapcontainer.js\";\nimport React, { Component } from \"react\";\nimport { Map, InfoWindow, Polyline, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport \"./App.css\";\nimport Geox from './Geox';\nimport MarkerConfig from \"./MarkerConfig\";\nimport Export from './Export';\nimport Import from './Import';\nimport Image1 from './image1.png';\nimport Image2 from './image2.png';\nexport var Markeur = function Markeur(nom, lat, lng) {\n  _classCallCheck(this, Markeur);\n\n  this.nom = nom;\n  this.lat = lat;\n  this.lng = lng;\n  this.titre = \"\";\n  this.texte = \"\";\n  this.img = \"\";\n  this.icon = Image2;\n  this.number = 0;\n};\nvar style = {\n  width: '75%',\n  height: '75%'\n};\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer(_props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, _props));\n\n    _this.update = function () {\n      _this.setState({\n        nbmk: 10\n      });\n    };\n\n    _this.newDragend = function (markeur, p2, event) {\n      var newlat = event.latLng.lat();\n      var newlng = event.latLng.lng();\n      var id = markeur.id;\n      console.log(newlng);\n      console.log(id);\n      console.log(_this.geox.mk[id]);\n      _this.geox.mk[id].lng = newlng;\n      _this.geox.mk[id].lat = newlat;\n\n      _this.setState({\n        nmbk: _this.geox.mk.length,\n        showingInfoWindow: false\n      });\n    };\n\n    _this.affichage = function (markeur, p2, event) {\n      _this.setState({\n        on: !_this.state.on\n      });\n    };\n\n    _this.ElementDiv = function (titre, text, img, number) {\n      console.log(_this.geox.mk);\n      _this.geox.mk[_this.state.selectedPlace.id].titre = titre;\n      _this.geox.mk[_this.state.selectedPlace.id].texte = text;\n      console.log(titre);\n      console.log(text);\n      console.log(img);\n      console.log(number);\n      _this.geox.mk[_this.state.selectedPlace.id].icon = Image1;\n      _this.geox.mk[_this.state.selectedPlace.id].number = 1;\n      _this.geox.mk[_this.state.selectedPlace.id].img = img;\n\n      _this.setState({\n        nmbk: _this.geox.mk.length\n      });\n    };\n\n    _this.onMarkerClick = function (props, marker, event) {\n      _this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        Event: event\n      });\n\n      if (_this.geox.mk[props.id].important === 1) {\n        _this.setState({\n          showingInfoWindow: true\n        });\n      } else {\n        _this.setState({\n          showingInfoWindow: false\n        });\n      }\n\n      console.log(_this.state.Event);\n    };\n\n    _this.FunctionTestAfficher = function () {\n      if (_this.geox.mk.length > 1) {\n        console.log(_this.geox.mk[0].lat);\n        return _this.geox.mk[1].lat;\n      }\n    };\n\n    _this.SupprimerMarkeurActuel = function () {\n      console.log(_this.geox.mk[_this.state.selectedPlace.id]);\n\n      _this.geox.mk.splice(_this.state.selectedPlace.id, 1);\n\n      _this.setState({\n        nbmk: _this.geox.mk.length,\n        showingInfoWindow: false,\n        selectedPlace: 0\n      });\n    };\n\n    _this.geox = new Geox();\n    _this.state = {\n      nbmk: 1,\n      isOpen: false,\n      Poly: true,\n      on: _props.on,\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: 0\n    };\n    _this.button = _this.state.on ? \"none\" : \"block\";\n    return _this;\n  }\n  /** Fonction serveur import - export **/\n\n\n  _createClass(MapContainer, [{\n    key: \"change\",\n    value: function change() {\n      this.setState({\n        Poly: !this.state.Poly\n      });\n    }\n    /** permet de supprimer un markeur depuis le bouton **/\n\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      this.geox.mk.pop();\n      this.setState({\n        nbmk: this.geox.mk.length\n      });\n      this.setState({\n        nbmk: this.geox.mk.length,\n        showingInfoWindow: false,\n        selectedPlace: 0\n      });\n    }\n    /** permet de supprimer tous les markeurs depuis le bouton **/\n\n  }, {\n    key: \"deleteAll\",\n    value: function deleteAll() {\n      this.geox.mk.splice(0, this.geox.mk.length);\n      this.setState({\n        nbmk: this.geox.mk.length,\n        showingInfoWindow: false,\n        selectedPlace: 0\n      });\n    }\n    /** permet d'ajouter un markeur sur la map en appuyant sur click gauche**/\n\n  }, {\n    key: \"handleMapClick\",\n    value: function handleMapClick(p1, p2, event) {\n      var lat = event.latLng.lat();\n      var lng = event.latLng.lng();\n      this.geox.mk.push(new Markeur(\"point \" + this.geox.mk.length, lat, lng));\n      this.setState({\n        nbmk: this.geox.mk.length\n      });\n      console.log(this.geox.mk);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var icon = Image2;\n      var rows = [];\n      var poli = [];\n      var info = \"\";\n\n      for (var i = 0; i < this.geox.mk.length; i++) {\n        if (this.geox.mk[i].number === 0) {\n          icon = Image2;\n        } else {\n          icon = Image1;\n        }\n\n        rows.push(React.createElement(Marker, {\n          id: i,\n          name: this.geox.mk[i].nom,\n          onClick: this.onMarkerClick,\n          draggable: true,\n          onDragend: this.newDragend,\n          position: {\n            lat: this.geox.mk[i].lat,\n            lng: this.geox.mk[i].lng\n          },\n          icon: this.geox.mk[i].icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }));\n        poli.push(rows[i].props.position);\n      }\n\n      if (this.geox.mk.length > 0 && this.state.selectedPlace != 0) {\n        info = React.createElement(\"div\", {\n          className: \"MarkeurInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, this.geox.mk[this.state.selectedPlace.id].titre), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, this.geox.mk[this.state.selectedPlace.id].text), React.createElement(\"img\", {\n          className: \"imgdiv\",\n          src: this.geox.mk[this.state.selectedPlace.id].img,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }));\n      }\n\n      var polySelector = this.state.Poly ? poli : null;\n      return React.createElement(\"div\", {\n        className: \"MAPP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Map, {\n        style: style,\n        google: this.props.google,\n        zoom: 18,\n        initialCenter: {\n          lat: 43.599980,\n          lng: 1.443138\n        },\n        streetViewControl: false,\n        mapTypeControl: false,\n        onClick: this.handleMapClick.bind(this),\n        disableDoubleClickZoom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, rows, React.createElement(Polyline, {\n        path: polySelector,\n        strokeWeight: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        onOpen: this.windowHasOpened,\n        onClose: this.windowHasClosed,\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, info)), React.createElement(\"div\", {\n        className: \"sectiondroit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"ulmap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.deleteAll.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Supprimer tous les markeurs\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.delete.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Supprimer dernier markeur\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.change.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Tracer:\", this.state.Poly ? \" Désactiver\" : \" Activer\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(MarkerConfig, {\n        laat: this.state.selectedPlace.id,\n        delete: this.SupprimerMarkeurActuel,\n        add: this.ElementDiv,\n        Markeur: this.geox.mk[this.state.selectedPlace.id] // info={this.geox.mk}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"sectionbas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Export, {\n        jsonSave: this.geox.mk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(Import, {\n        jsonLoad: this.geox.mk,\n        callback: this.update,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA3Gsj08QzmXalEyHuuHgnzNKk4dGS6i84\"\n})(MapContainer);","map":{"version":3,"sources":["/home/karyl/Documents/Googlemap/googlemap/src/Mapcontainer.js"],"names":["React","Component","Map","InfoWindow","Polyline","Marker","GoogleApiWrapper","Geox","MarkerConfig","Export","Import","Image1","Image2","Markeur","nom","lat","lng","titre","texte","img","icon","number","style","width","height","MapContainer","props","update","setState","nbmk","newDragend","markeur","p2","event","newlat","latLng","newlng","id","console","log","geox","mk","nmbk","length","showingInfoWindow","affichage","on","state","ElementDiv","text","selectedPlace","onMarkerClick","marker","activeMarker","Event","important","FunctionTestAfficher","SupprimerMarkeurActuel","splice","isOpen","Poly","button","pop","p1","push","rows","poli","info","i","position","polySelector","google","handleMapClick","bind","windowHasOpened","windowHasClosed","deleteAll","delete","change","apiKey"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,EAAaC,UAAb,EAAyBC,QAAzB,EAAmCC,MAAnC,EAA2CC,gBAA3C,QAAkE,mBAAlE;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAOA,WAAaC,OAAb,GAEI,iBAAYC,GAAZ,EAAgBC,GAAhB,EAAoBC,GAApB,EAAwB;AAAA;;AAEpB,OAAKF,GAAL,GAASA,GAAT;AACA,OAAKC,GAAL,GAASA,GAAT;AACA,OAAKC,GAAL,GAASA,GAAT;AACA,OAAKC,KAAL,GAAW,EAAX;AACA,OAAKC,KAAL,GAAW,EAAX;AACA,OAAKC,GAAL,GAAS,EAAT;AACA,OAAKC,IAAL,GAAUR,MAAV;AACA,OAAKS,MAAL,GAAY,CAAZ;AAGH,CAdL;AAkBA,IAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,KADG;AAEVC,EAAAA,MAAM,EAAE;AAFE,CAAd;AAOA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AACI,wBAAYC,MAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,MAAN;;AADe,UAwBvBC,MAxBuB,GAwBd,YAAM;AAAC,YAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAd;AAAyB,KAxBlB;;AAAA,UA2BnBC,UA3BmB,GA2BN,UAACC,OAAD,EAASC,EAAT,EAAYC,KAAZ,EAAqB;AAE9B,UAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAapB,GAAb,EAAb;AACA,UAAIqB,MAAM,GAAGH,KAAK,CAACE,MAAN,CAAanB,GAAb,EAAb;AACA,UAAIqB,EAAE,GAAEN,OAAO,CAACM,EAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,IAAL,CAAUC,EAAV,CAAaJ,EAAb,CAAZ;AACA,YAAKG,IAAL,CAAUC,EAAV,CAAaJ,EAAb,EAAiBrB,GAAjB,GAAqBoB,MAArB;AACA,YAAKI,IAAL,CAAUC,EAAV,CAAaJ,EAAb,EAAiBtB,GAAjB,GAAqBmB,MAArB;;AACA,YAAKN,QAAL,CAAc;AAACc,QAAAA,IAAI,EAAC,MAAKF,IAAL,CAAUC,EAAV,CAAaE,MAAnB;AAA0BC,QAAAA,iBAAiB,EAAC;AAA5C,OAAd;AAEH,KAvCkB;;AAAA,UAyCnBC,SAzCmB,GAyCR,UAACd,OAAD,EAASC,EAAT,EAAYC,KAAZ,EAAsB;AACjC,YAAKL,QAAL,CAAc;AAACkB,QAAAA,EAAE,EAAC,CAAC,MAAKC,KAAL,CAAWD;AAAhB,OAAd;AAEC,KA5CkB;;AAAA,UA8CnBE,UA9CmB,GA8CN,UAAC/B,KAAD,EAAOgC,IAAP,EAAY9B,GAAZ,EAAgBE,MAAhB,EAA2B;AACpCiB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,IAAL,CAAUC,EAAtB;AACA,YAAKD,IAAL,CAAUC,EAAV,CAAa,MAAKM,KAAL,CAAWG,aAAX,CAAyBb,EAAtC,EAA0CpB,KAA1C,GAAkDA,KAAlD;AACA,YAAKuB,IAAL,CAAUC,EAAV,CAAa,MAAKM,KAAL,CAAWG,aAAX,CAAyBb,EAAtC,EAA0CnB,KAA1C,GAAkD+B,IAAlD;AAEAX,MAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYpB,GAAZ;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACA,YAAKmB,IAAL,CAAUC,EAAV,CAAa,MAAKM,KAAL,CAAWG,aAAX,CAAyBb,EAAtC,EAA0CjB,IAA1C,GAAiDT,MAAjD;AACA,YAAK6B,IAAL,CAAUC,EAAV,CAAa,MAAKM,KAAL,CAAWG,aAAX,CAAyBb,EAAtC,EAA0ChB,MAA1C,GAAmD,CAAnD;AACA,YAAKmB,IAAL,CAAUC,EAAV,CAAa,MAAKM,KAAL,CAAWG,aAAX,CAAyBb,EAAtC,EAA0ClB,GAA1C,GAAgDA,GAAhD;;AACA,YAAKS,QAAL,CAAc;AAACc,QAAAA,IAAI,EAAC,MAAKF,IAAL,CAAUC,EAAV,CAAaE;AAAnB,OAAd;AAIH,KA9DkB;;AAAA,UAgGnBQ,aAhGmB,GAgGH,UAACzB,KAAD,EAAQ0B,MAAR,EAAgBnB,KAAhB,EAAyB;AACrC,YAAKL,QAAL,CAAc;AACVsB,QAAAA,aAAa,EAAExB,KADL;AAEV2B,QAAAA,YAAY,EAAED,MAFJ;AAGVE,QAAAA,KAAK,EAAErB;AAHG,OAAd;;AAKA,UAAG,MAAKO,IAAL,CAAUC,EAAV,CAAaf,KAAK,CAACW,EAAnB,EAAuBkB,SAAvB,KAAqC,CAAxC,EAA0C;AACtC,cAAK3B,QAAL,CAAc;AAACgB,UAAAA,iBAAiB,EAAC;AAAnB,SAAd;AACH,OAFD,MAEM;AACF,cAAKhB,QAAL,CAAc;AAACgB,UAAAA,iBAAiB,EAAC;AAAnB,SAAd;AACH;;AAEDN,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKQ,KAAL,CAAWO,KAAvB;AACP,KA7GsB;;AAAA,UA8GnBE,oBA9GmB,GA8GI,YAAM;AACzB,UAAI,MAAKhB,IAAL,CAAUC,EAAV,CAAaE,MAAb,GAAsB,CAA1B,EAA4B;AACxBL,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,IAAL,CAAUC,EAAV,CAAa,CAAb,EAAgB1B,GAA5B;AACA,eAAO,MAAKyB,IAAL,CAAUC,EAAV,CAAa,CAAb,EAAgB1B,GAAvB;AAEH;AACJ,KApHkB;;AAAA,UAsHnB0C,sBAtHmB,GAsHM,YAAM;AAE3BnB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,IAAL,CAAUC,EAAV,CAAa,MAAKM,KAAL,CAAWG,aAAX,CAAyBb,EAAtC,CAAZ;;AACA,YAAKG,IAAL,CAAUC,EAAV,CAAaiB,MAAb,CAAoB,MAAKX,KAAL,CAAWG,aAAX,CAAyBb,EAA7C,EAAgD,CAAhD;;AAEA,YAAKT,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE,MAAKW,IAAL,CAAUC,EAAV,CAAaE,MAApB;AAA4BC,QAAAA,iBAAiB,EAAE,KAA/C;AAAsDM,QAAAA,aAAa,EAAE;AAArE,OAAd;AAEH,KA7HkB;;AAEf,UAAKV,IAAL,GAAY,IAAIjC,IAAJ,EAAZ;AAEA,UAAKwC,KAAL,GAAa;AACTlB,MAAAA,IAAI,EAAE,CADG;AAET8B,MAAAA,MAAM,EAAE,KAFC;AAGTC,MAAAA,IAAI,EAAE,IAHG;AAITd,MAAAA,EAAE,EAAEpB,MAAK,CAACoB,EAJD;AAKTF,MAAAA,iBAAiB,EAAE,KALV;AAMTS,MAAAA,YAAY,EAAE,EANL;AAOTH,MAAAA,aAAa,EAAE;AAPN,KAAb;AAYA,UAAKW,MAAL,GAAc,MAAKd,KAAL,CAAWD,EAAX,GAAgB,MAAhB,GAAyB,OAAvC;AAhBe;AAmBlB;AAGL;;;AAvBA;AAAA;AAAA,6BAmEc;AACN,WAAKlB,QAAL,CAAc;AAACgC,QAAAA,IAAI,EAAC,CAAC,KAAKb,KAAL,CAAWa;AAAlB,OAAd;AACH;AAED;;AAvEJ;AAAA;AAAA,8BAwEc;AACN,WAAKpB,IAAL,CAAUC,EAAV,CAAaqB,GAAb;AACA,WAAKlC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAC,KAAKW,IAAL,CAAUC,EAAV,CAAaE;AAAnB,OAAd;AACA,WAAKf,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE,KAAKW,IAAL,CAAUC,EAAV,CAAaE,MAApB;AAA4BC,QAAAA,iBAAiB,EAAE,KAA/C;AAAqDM,QAAAA,aAAa,EAAE;AAApE,OAAd;AACH;AACL;;AA7EA;AAAA;AAAA,gCA8EiB;AAET,WAAKV,IAAL,CAAUC,EAAV,CAAaiB,MAAb,CAAoB,CAApB,EAAuB,KAAKlB,IAAL,CAAUC,EAAV,CAAaE,MAApC;AACA,WAAKf,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE,KAAKW,IAAL,CAAUC,EAAV,CAAaE,MAApB;AAA4BC,QAAAA,iBAAiB,EAAE,KAA/C;AAAsDM,QAAAA,aAAa,EAAE;AAArE,OAAd;AAEH;AAIL;;AAvFA;AAAA;AAAA,mCAwFmBa,EAxFnB,EAwFsB/B,EAxFtB,EAwFyBC,KAxFzB,EAwFgC;AACxB,UAAIlB,GAAG,GAAGkB,KAAK,CAACE,MAAN,CAAapB,GAAb,EAAV;AACA,UAAIC,GAAG,GAAGiB,KAAK,CAACE,MAAN,CAAanB,GAAb,EAAV;AACA,WAAKwB,IAAL,CAAUC,EAAV,CAAauB,IAAb,CAAkB,IAAInD,OAAJ,CAAY,WAAU,KAAK2B,IAAL,CAAUC,EAAV,CAAaE,MAAnC,EAA0C5B,GAA1C,EAA8CC,GAA9C,CAAlB;AACA,WAAKY,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAC,KAAKW,IAAL,CAAUC,EAAV,CAAaE;AAAnB,OAAd;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,IAAL,CAAUC,EAAtB;AAGH;AAhGL;AAAA;AAAA,6BAkIa;AAEL,UAAIrB,IAAI,GAACR,MAAT;AACA,UAAKqD,IAAI,GAAG,EAAZ;AACA,UAAKC,IAAI,GAAG,EAAZ;AACA,UAAKC,IAAI,GAAC,EAAV;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAE,KAAK5B,IAAL,CAAUC,EAAV,CAAaE,MAAhC,EAAuCyB,CAAC,EAAxC,EAA2C;AACvC,YAAI,KAAK5B,IAAL,CAAUC,EAAV,CAAa2B,CAAb,EAAgB/C,MAAhB,KAA2B,CAA/B,EAAiC;AAC7BD,UAAAA,IAAI,GAAGR,MAAP;AACH,SAFD,MAEO;AACHQ,UAAAA,IAAI,GAAGT,MAAP;AACH;;AACDsD,QAAAA,IAAI,CAACD,IAAL,CACI,oBAAC,MAAD;AACA,UAAA,EAAE,EAAEI,CADJ;AACO,UAAA,IAAI,EAAE,KAAK5B,IAAL,CAAUC,EAAV,CAAa2B,CAAb,EAAgBtD,GAD7B;AAEA,UAAA,OAAO,EAAE,KAAKqC,aAFd;AAGA,UAAA,SAAS,EAAE,IAHX;AAGiB,UAAA,SAAS,EAAE,KAAKrB,UAHjC;AAIA,UAAA,QAAQ,EAAE;AAACf,YAAAA,GAAG,EAAE,KAAKyB,IAAL,CAAUC,EAAV,CAAa2B,CAAb,EAAgBrD,GAAtB;AAA0BC,YAAAA,GAAG,EAAE,KAAKwB,IAAL,CAAUC,EAAV,CAAa2B,CAAb,EAAgBpD;AAA/C,WAJV;AAKA,UAAA,IAAI,EAAG,KAAKwB,IAAL,CAAUC,EAAV,CAAa2B,CAAb,EAAgBhD,IALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWA8C,QAAAA,IAAI,CAACF,IAAL,CAAUC,IAAI,CAACG,CAAD,CAAJ,CAAQ1C,KAAR,CAAc2C,QAAxB;AACL;;AACD,UAAI,KAAK7B,IAAL,CAAUC,EAAV,CAAaE,MAAb,GAAsB,CAAvB,IAA4B,KAAKI,KAAL,CAAWG,aAAX,IAA4B,CAA3D,EAA8D;AAE1DiB,QAAAA,IAAI,GAAE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,KAAK3B,IAAL,CAAUC,EAAV,CAAa,KAAKM,KAAL,CAAWG,aAAX,CAAyBb,EAAtC,EAA0CpB,KAA/C,CADM,EAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI,KAAKuB,IAAL,CAAUC,EAAV,CAAa,KAAKM,KAAL,CAAWG,aAAX,CAAyBb,EAAtC,EAA0CY,IAA9C,CAFM,EAGN;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,GAAG,EAAE,KAAKT,IAAL,CAAUC,EAAV,CAAa,KAAKM,KAAL,CAAWG,aAAX,CAAyBb,EAAtC,EAA0ClB,GAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHM,CAAN;AAKH;;AAEC,UAAMmD,YAAY,GAAG,KAAKvB,KAAL,CAAWa,IAAX,GAAkBM,IAAlB,GAAyB,IAA9C;AAKA,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AACI,QAAA,KAAK,EAAE5C,KADX;AAEI,QAAA,MAAM,EAAE,KAAKI,KAAL,CAAW6C,MAFvB;AAGI,QAAA,IAAI,EAAE,EAHV;AAII,QAAA,aAAa,EAAE;AAACxD,UAAAA,GAAG,EAAC,SAAL;AAAgBC,UAAAA,GAAG,EAAC;AAApB,SAJnB;AAKI,QAAA,iBAAiB,EAAE,KALvB;AAMI,QAAA,cAAc,EAAE,KANpB;AAOI,QAAA,OAAO,EAAE,KAAKwD,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAPb;AASI,QAAA,sBAAsB,EAAE,IAT5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWKR,IAXL,EAYI,oBAAC,QAAD;AACA,QAAA,IAAI,EAAEK,YADN;AAEA,QAAA,YAAY,EAAE,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,EAiBI,oBAAC,UAAD;AACI,QAAA,MAAM,EAAE,KAAKI,eADjB;AAEI,QAAA,OAAO,EAAE,KAAKC,eAFlB;AAGI,QAAA,MAAM,EAAE,KAAK5B,KAAL,CAAWM,YAHvB;AAII,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWH,iBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKKuB,IALL,CAjBJ,CADJ,EA6BI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAQ,QAAA,OAAO,EAAE,KAAKS,SAAL,CAAeH,IAAf,CAAoB,IAApB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAJ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAQ,QAAA,OAAO,EAAE,KAAKI,MAAL,CAAYJ,IAAZ,CAAiB,IAAjB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAJ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAQ,QAAA,OAAO,EAAE,KAAKK,MAAL,CAAYL,IAAZ,CAAiB,IAAjB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiD,KAAK1B,KAAL,CAAWa,IAAX,GAAkB,aAAlB,GAAiC,UAAlF,CAAJ,CALJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,YAAD;AACI,QAAA,IAAI,EAAE,KAAKb,KAAL,CAAWG,aAAX,CAAyBb,EADnC;AAEI,QAAA,MAAM,EAAE,KAAKoB,sBAFjB;AAGI,QAAA,GAAG,EAAE,KAAKT,UAHd;AAII,QAAA,OAAO,EAAE,KAAKR,IAAL,CAAUC,EAAV,CAAa,KAAKM,KAAL,CAAWG,aAAX,CAAyBb,EAAtC,CAJb,CAKI;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CARJ,CA7BJ,EAgDI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKG,IAAL,CAAUC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKD,IAAL,CAAUC,EAA5B;AAAgC,QAAA,QAAQ,EAAE,KAAKd,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAhDJ,CADJ;AA2DH;AArOL;;AAAA;AAAA,EAAkC1B,SAAlC;AAwOA,eAAeK,gBAAgB,CAAC;AAC5ByE,EAAAA,MAAM,EAAE;AADoB,CAAD,CAAhB,CAGZtD,YAHY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {Map, InfoWindow, Polyline, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport \"./App.css\";\nimport Geox from './Geox';\nimport MarkerConfig from \"./MarkerConfig\";\nimport Export from './Export';\nimport Import from './Import';\nimport Image1 from './image1.png';\nimport Image2 from './image2.png'\n\n\n\n\n\n\nexport class Markeur {\n\n    constructor(nom,lat,lng){\n\n        this.nom=nom;  \n        this.lat=lat;\n        this.lng=lng;\n        this.titre=\"\";\n        this.texte=\"\";\n        this.img=\"\";\n        this.icon=Image2;\n        this.number=0;\n\n\n    }\n}\n\n\nconst style = {\n    width: '75%',\n    height: '75%',\n\n};\n\n\nexport class MapContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.geox = new Geox;\n\n        this.state = {\n            nbmk: 1,\n            isOpen: false,\n            Poly: true,\n            on: props.on,\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: 0,\n            \n\n\n        };\n        this.button = this.state.on ? \"none\" : \"block\";\n\n\n    }\n\n\n/** Fonction serveur import - export **/\n\nupdate = () => {this.setState({nbmk:10})};\n\n/** Function qui permet de d'actualiser la polyline du markeur pour */\n    newDragend = (markeur,p2,event) =>{\n\n        var newlat = event.latLng.lat();\n        var newlng = event.latLng.lng();\n        var id= markeur.id;\n        console.log(newlng);\n        console.log(id);\n        console.log(this.geox.mk[id]);\n        this.geox.mk[id].lng=newlng;\n        this.geox.mk[id].lat=newlat;\n        this.setState({nmbk:this.geox.mk.length,showingInfoWindow:false});\n        \n    };\n\n    affichage =(markeur,p2,event) => {\n    this.setState({on:!this.state.on})\n\n    };\n\n    ElementDiv = (titre,text,img,number) => {\n        console.log(this.geox.mk);\n        this.geox.mk[this.state.selectedPlace.id].titre = titre;\n        this.geox.mk[this.state.selectedPlace.id].texte = text;\n\n        console.log(titre);\n        console.log(text);\n        console.log(img);\n        console.log(number);\n        this.geox.mk[this.state.selectedPlace.id].icon = Image1\n        this.geox.mk[this.state.selectedPlace.id].number = 1;\n        this.geox.mk[this.state.selectedPlace.id].img = img\n        this.setState({nmbk:this.geox.mk.length});\n        \n        \n    \n    }\n\n\n\n    change () {\n        this.setState({Poly:!this.state.Poly})\n    }\n\n    /** permet de supprimer un markeur depuis le bouton **/\n    delete () {\n        this.geox.mk.pop();\n        this.setState({nbmk:this.geox.mk.length})\n        this.setState({nbmk: this.geox.mk.length, showingInfoWindow: false,selectedPlace: 0})\n    }\n/** permet de supprimer tous les markeurs depuis le bouton **/\n    deleteAll () {\n\n        this.geox.mk.splice(0, this.geox.mk.length);\n        this.setState({nbmk: this.geox.mk.length, showingInfoWindow: false, selectedPlace: 0})\n\n    }\n\n\n\n/** permet d'ajouter un markeur sur la map en appuyant sur click gauche**/\n    handleMapClick(p1,p2,event) {\n        var lat = event.latLng.lat();\n        var lng = event.latLng.lng();\n        this.geox.mk.push(new Markeur(\"point \"+ this.geox.mk.length,lat,lng));\n        this.setState({nbmk:this.geox.mk.length});\n        console.log(this.geox.mk);\n\n\n    }\n    onMarkerClick = (props, marker, event) =>{\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            Event: event,\n            });\n        if(this.geox.mk[props.id].important === 1){\n            this.setState({showingInfoWindow:true})\n        }else {\n            this.setState({showingInfoWindow:false})\n        }\n               \n        console.log(this.state.Event)\n};\n    FunctionTestAfficher = () => {\n        if (this.geox.mk.length > 1){\n            console.log(this.geox.mk[0].lat);\n            return this.geox.mk[1].lat\n\n        }\n    };\n\n    SupprimerMarkeurActuel  =() => {\n\n        console.log(this.geox.mk[this.state.selectedPlace.id]);\n        this.geox.mk.splice(this.state.selectedPlace.id,1);\n    \n        this.setState({nbmk: this.geox.mk.length, showingInfoWindow: false, selectedPlace: 0})\n\n    };\n\n\n\n    render() {\n\n        let icon=Image2\n        let  rows = [];\n        let  poli = [];\n        let  info=\"\";\n\n        for (var i = 0; i< this.geox.mk.length;i++){\n            if (this.geox.mk[i].number === 0){\n                icon = Image2;\n            } else {\n                icon = Image1;\n            }\n            rows.push(\n                <Marker\n                id={i} name={this.geox.mk[i].nom}\n                onClick={this.onMarkerClick}\n                draggable={true} onDragend={this.newDragend}\n                position={{lat: this.geox.mk[i].lat,lng: this.geox.mk[i].lng}}\n                icon= {this.geox.mk[i].icon}\n                />);\n    \n\n\n            poli.push(rows[i].props.position)\n      }\n      if((this.geox.mk.length > 0)&&(this.state.selectedPlace != 0)){\n          \n          info= <div className=\"MarkeurInfo\">\n          <h2>{this.geox.mk[this.state.selectedPlace.id].titre}</h2>\n          <p>{this.geox.mk[this.state.selectedPlace.id].text}</p>\n          <img className=\"imgdiv\" src={this.geox.mk[this.state.selectedPlace.id].img}/>\n      </div>\n      }\n       \n        const polySelector = this.state.Poly ? poli : null;\n\n\n\n\n        return (\n            <div className=\"MAPP\">\n                <Map\n                    style={style}\n                    google={this.props.google}\n                    zoom={18}\n                    initialCenter={{lat:43.599980, lng:1.443138}}\n                    streetViewControl={false}\n                    mapTypeControl={false}\n                    onClick={this.handleMapClick.bind(this)}\n\n                    disableDoubleClickZoom={true}\n                >\n                    {rows}\n                    <Polyline\n                    path={polySelector}\n                    strokeWeight={2}\n                    />\n\n                    <InfoWindow\n                        onOpen={this.windowHasOpened}\n                        onClose={this.windowHasClosed}\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}>\n                        {info}\n                        \n                    </InfoWindow>\n\n                </Map>\n\n                <div className=\"sectiondroit\">\n                    <ul className=\"ulmap\">\n                        <li><button onClick={this.deleteAll.bind(this)}>Supprimer tous les markeurs</button></li>\n                        <br/>\n                        <li><button onClick={this.delete.bind(this)}>Supprimer dernier markeur</button></li>\n                        <br/>\n                        <li><button onClick={this.change.bind(this)}>Tracer:{this.state.Poly ? \" Désactiver\": \" Activer\"}</button></li>\n                    </ul>\n                    <div>\n                    <MarkerConfig\n                        laat={this.state.selectedPlace.id}\n                        delete={this.SupprimerMarkeurActuel}\n                        add={this.ElementDiv}\n                        Markeur={this.geox.mk[this.state.selectedPlace.id]}\n                        // info={this.geox.mk}\n\n                    />\n                    </div>\n                </div>\n                <div className=\"sectionbas\">\n                    <Export jsonSave={this.geox.mk}/>\n                    <Import jsonLoad={this.geox.mk} callback={this.update}/>\n\n                </div>\n\n\n            </div>\n\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyA3Gsj08QzmXalEyHuuHgnzNKk4dGS6i84\"\n\n})(MapContainer)"]},"metadata":{},"sourceType":"module"}